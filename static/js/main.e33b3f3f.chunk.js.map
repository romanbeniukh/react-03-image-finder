{"version":3,"sources":["services/apiService.js","components/SearchBar/SearchForm.jsx","components/SearchBar/SearchBar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/LoarMore/LoadMore.jsx","components/Modal/Modal.jsx","components/App.js","index.js"],"names":["searchQuery","page","axios","get","then","response","data","hits","SearchForm","state","handleChange","e","preventDefault","setState","target","name","value","handleSubmit","props","updateQuery","className","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","SearchBar","ImageGalleryItem","picture","data-src","largeImageURL","src","webformatURL","alt","id","ImageGallery","pictures","getBigPicture","map","onClick","key","LoadMore","loadMorePictures","Modal","backdropRef","createRef","handleKeypress","code","closeModal","handleBackdropClick","current","window","addEventListener","removeEventListener","ref","bigPicture","App","query","isLoading","isModal","error","updateState","resetBeforeNewQuery","scrollToTarget","document","getElementById","getBoundingClientRect","top","scrollY","scrollTo","behavior","dataset","openModal","prevProps","prevState","snapshot","apiService","concat","length","catch","finally","message","color","height","width","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e33b3f3f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst fetchPicturesWithQuery = ( searchQuery, page ) => {\n  const apiKey = `15321800-0af55316b9677918b25647eb1`;\n\n  return axios\n    .get(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&per_page=12&key=${apiKey}&q=${searchQuery}&page=${page}`)\n    .then(response => response.data.hits);\n};\n\nexport default {\n  fetchPicturesWithQuery,\n};","import React, { Component } from 'react';\nimport T from 'prop-types';\n\nclass SearchForm extends Component {\n  static propTypes = {\n    updateQuery: T.func.isRequired,\n  };\n\n  state = {\n    searchQuery: '',\n  };\n\n  handleChange = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.updateQuery(this.state.searchQuery)\n  };\n\n  render() {\n    return (\n      <form className=\"search-form\" onSubmit={ this.handleSubmit }>\n        <button type=\"submit\" className=\"search-form__button\">\n          <span className=\"search-form__button-label\">Search</span>\n        </button>\n        <input\n          onChange={ this.handleChange }\n          name=\"searchQuery\"\n          className=\"search-form__input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    )\n  }\n}\n\nexport default SearchForm;","import React from 'react';\nimport T from 'prop-types';\nimport SearchForm from './SearchForm';\n\nconst SearchBar = ({ updateQuery }) => (\n  <header className=\"search-bar\">\n    <SearchForm updateQuery={updateQuery}/>\n  </header>\n);\n\nSearchBar.propTypes = {\n  updateQuery: T.func.isRequired,\n};\n\nexport default SearchBar;","import React from 'react';\nimport T from 'prop-types';\n\nconst ImageGalleryItem = ({ picture }) => (\n  <>\n    <img data-src={ picture.largeImageURL }\n         src={ picture.webformatURL }\n         alt={ picture.id }\n         className=\"image-gallery__img\"\n    />\n  </>\n);\n\nImageGalleryItem.propTypes = {\n  picture: T.shape({\n    largeImageURL: T.string.isRequired,\n    webformatURL: T.string.isRequired,\n    id: T.number.isRequired,\n  }).isRequired,\n};\n\nexport default ImageGalleryItem;","import React from 'react';\nimport T from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nconst ImageGallery = ({ pictures, getBigPicture }) => (\n  <ul className=\"image-gallery\">\n    {pictures.map(picture => (\n      <li className=\"image-gallery__item\"\n          onClick={ getBigPicture }\n          id={ picture.id }\n          key={ picture.id }\n      >\n        <ImageGalleryItem picture={ picture }/>\n      </li>\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  pictures: T.array.isRequired,\n  getBigPicture: T.func.isRequired,\n};\n\nexport default ImageGallery;","import React from 'react';\nimport T from 'prop-types';\n\nconst LoadMore = ({ page, loadMorePictures }) => (\n  <div className=\"load-more\" >\n    <button className=\"load-more__btn\" onClick={ () => loadMorePictures(page) }>load</button>\n  </div>\n);\n\nLoadMore.propTypes = {\n  page: T.number.isRequired,\n  loadMorePictures: T.func.isRequired,\n};\n\nexport default LoadMore;","import React, {Component, createRef} from 'react';\nimport T from 'prop-types';\n\nclass Modal extends Component {\n  static propTypes = {\n    bigPicture: T.string.isRequired,\n    closeModal: T.func.isRequired,\n  };\n\n  backdropRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeypress)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeypress)\n  }\n\n  handleKeypress = (e) => {\n    if (e.code !== 'Escape') return;\n\n    this.props.closeModal();\n  };\n\n  handleBackdropClick = ( e ) => {\n    const { current } = this.backdropRef;\n\n    if (current && e.target !== current) {\n      return;\n    }\n\n    this.props.closeModal();\n  };\n\n  render() {\n    return (\n      <div className=\"overlay\" ref={ this.backdropRef } onClick={ this.handleBackdropClick }>\n        <div className=\"modal\">\n          <img className=\"modal__img\"\n               src={ this.props.bigPicture }\n               alt=\"bigPicture\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport Loader from 'react-loader-spinner'\nimport apiService from '../services/apiService';\nimport SearchBar from './SearchBar/SearchBar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport LoadMore from './LoarMore/LoadMore';\nimport Modal from './Modal/Modal';\n\nclass App extends Component {\n  state = {\n    pictures: [],\n    bigPicture: '',\n    query: '',\n    page: 1,\n    isLoading: false,\n    isModal: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.query !== this.state.query || prevState.page !== this.state.page) {\n      this.setState({ isLoading: true });\n\n      apiService\n        .fetchPicturesWithQuery(this.state.query, this.state.page)\n        .then(picture => {\n          this.setState(state => ({\n            pictures: state.pictures.concat(picture)\n          }));\n          picture.length && this.scrollToTarget(picture[0].id)\n        })\n        .catch(error => this.setState({ error }))\n        .finally(() => this.setState({ isLoading: false }));\n    }\n  };\n\n  updateState = ( state, value ) => {\n    this.setState({\n      [state]: value\n    })\n  };\n\n  updateQuery = ( value ) => {\n    value !== this.state.query && this.resetBeforeNewQuery();\n    this.updateState('query', value);\n  };\n\n  loadMorePictures = ( value ) => {\n    value++;\n    this.updateState('page', value);\n  };\n\n  resetBeforeNewQuery = () => {\n    this.updateState('page', 1);\n    this.updateState('pictures', []);\n  };\n\n  scrollToTarget = ( id ) => {\n    const target = document.getElementById(id).getBoundingClientRect().top + window.scrollY - 80;\n\n    window.scrollTo({\n      top: target,\n      behavior: 'smooth',\n    });\n  };\n\n  getBigPicture = ( e ) => {\n    this.updateState('bigPicture', e.target.dataset.src);\n    this.openModal();\n  };\n\n  openModal = () => {\n    this.updateState('isModal', true);\n  };\n\n  closeModal = () => {\n    this.updateState('isModal', false);\n    this.updateState('bigPicture', '');\n  };\n\n  render() {\n    return (\n      <div className=\"page-container\">\n        <SearchBar updateQuery={ this.updateQuery }/>\n        {this.state.error && (\n          <p>Whoops, something went wrong: {this.state.error.message}</p>\n        )}\n        {this.state.pictures.length > 0 && (\n          <ImageGallery pictures={ this.state.pictures } getBigPicture={ this.getBigPicture }/>\n        )}\n        {this.state.isLoading && (\n          <Loader className=\"loader\" type=\"ThreeDots\" color=\"#e4e4e4\" height={80} width={80} />\n        )}\n        {this.state.pictures.length >= 12 && (\n          <LoadMore page={this.state.page} loadMorePictures={ this.loadMorePictures }/>\n        )}\n        {this.state.isModal && (\n          <Modal bigPicture={ this.state.bigPicture } closeModal={ this.closeModal }/>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import './sass/index.sass';\nimport App from './components/App';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}