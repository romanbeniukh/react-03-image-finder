{"version":3,"sources":["services/apiService.js","components/SearchBar/SearchForm.jsx","components/SearchBar/SearchBar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Notification/Notification.jsx","components/App.js","index.js"],"names":["searchQuery","page","axios","get","then","response","data","hits","SearchForm","state","handleChange","e","preventDefault","setState","target","name","value","handleSubmit","props","updateQuery","className","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","SearchBar","ImageGalleryItem","picture","data-src","largeImageURL","src","webformatURL","alt","id","ImageGallery","pictures","getBigPicture","map","onClick","key","Button","title","handler","Modal","backdropRef","createRef","handleKeypress","code","closeModal","handleBackdropClick","current","window","addEventListener","removeEventListener","ref","bigPicture","Notification","message","App","query","isEmpty","isLoading","isModal","error","updateState","resetBeforeNewQuery","loadMorePictures","scrollToTarget","document","getElementById","getBoundingClientRect","top","scrollY","scrollTo","behavior","dataset","openModal","prevProps","prevState","snapshot","apiService","concat","length","catch","finally","color","height","width","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2ebb9e73.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst fetchPicturesWithQuery = ( searchQuery, page ) => {\n  const apiKey = `15321800-0af55316b9677918b25647eb1`;\n\n  return axios\n    .get(`https://pixabay.com/api/?image_type=photo&orientation=horizontal&per_page=12&key=${apiKey}&q=${searchQuery}&page=${page}`)\n    .then(response => response.data.hits);\n};\n\nexport default {\n  fetchPicturesWithQuery,\n};","import React, { Component } from 'react';\nimport T from 'prop-types';\n\nclass SearchForm extends Component {\n  static propTypes = {\n    updateQuery: T.func.isRequired,\n  };\n\n  state = {\n    searchQuery: '',\n  };\n\n  handleChange = (e) => {\n    e.preventDefault();\n\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.updateQuery(this.state.searchQuery)\n  };\n\n  render() {\n    return (\n      <form className=\"search-form\" onSubmit={ this.handleSubmit }>\n        <button type=\"submit\" className=\"search-form__button\">\n          <span className=\"search-form__button-label\">Поиск</span>\n        </button>\n        <input\n          onChange={ this.handleChange }\n          name=\"searchQuery\"\n          className=\"search-form__input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Введите то, что хотите найти...\"\n        />\n      </form>\n    )\n  }\n}\n\nexport default SearchForm;","import React from 'react';\nimport T from 'prop-types';\nimport SearchForm from './SearchForm';\n\nconst SearchBar = ({ updateQuery }) => (\n  <header className=\"search-bar\">\n    <SearchForm updateQuery={updateQuery}/>\n  </header>\n);\n\nSearchBar.propTypes = {\n  updateQuery: T.func.isRequired,\n};\n\nexport default SearchBar;","import React from 'react';\nimport T from 'prop-types';\n\nconst ImageGalleryItem = ({ picture }) => (\n  <>\n    <img data-src={ picture.largeImageURL }\n         src={ picture.webformatURL }\n         alt={ picture.id }\n         className=\"image-gallery__img\"\n    />\n  </>\n);\n\nImageGalleryItem.propTypes = {\n  picture: T.shape({\n    largeImageURL: T.string.isRequired,\n    webformatURL: T.string.isRequired,\n    id: T.number.isRequired,\n  }).isRequired,\n};\n\nexport default ImageGalleryItem;","import React from 'react';\nimport T from 'prop-types';\nimport ImageGalleryItem from './ImageGalleryItem';\n\nconst ImageGallery = ({ pictures, getBigPicture }) => (\n  <ul className=\"image-gallery\">\n    {pictures.map(picture => (\n      <li className=\"image-gallery__item\"\n          onClick={ getBigPicture }\n          id={ picture.id }\n          key={ picture.id }\n      >\n        <ImageGalleryItem picture={ picture }/>\n      </li>\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  pictures: T.array.isRequired,\n  getBigPicture: T.func.isRequired,\n};\n\nexport default ImageGallery;","import React from 'react';\nimport T from 'prop-types';\n\nconst Button = ({ title, page, handler }) => (\n  <div className=\"button-wrap\" >\n    <button className=\"button-wrap__btn\" onClick={ () => handler(page) }>{ title }</button>\n  </div>\n);\n\nButton.propTypes = {\n  title: T.string.isRequired,\n  page: T.number.isRequired,\n  handler: T.func.isRequired,\n};\n\nexport default Button;","import React, {Component, createRef} from 'react';\nimport T from 'prop-types';\n\nclass Modal extends Component {\n  static propTypes = {\n    bigPicture: T.string.isRequired,\n    closeModal: T.func.isRequired,\n  };\n\n  backdropRef = createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeypress)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeypress)\n  }\n\n  handleKeypress = (e) => {\n    if (e.code !== 'Escape') return;\n\n    this.props.closeModal();\n  };\n\n  handleBackdropClick = ( e ) => {\n    const { current } = this.backdropRef;\n\n    if (current && e.target !== current) {\n      return;\n    }\n\n    this.props.closeModal();\n  };\n\n  render() {\n    return (\n      <div className=\"overlay\" ref={ this.backdropRef } onClick={ this.handleBackdropClick }>\n        <div className=\"modal\">\n          <img className=\"modal__img\"\n               src={ this.props.bigPicture }\n               alt=\"bigPicture\" />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Modal;","import React from 'react';\nimport T from 'prop-types';\n\nconst Notification = ({ message }) => (\n  <div className=\"notification\">\n    <span className=\"notification__message\">\n      { message }\n    </span>\n  </div>\n);\n\nNotification.propTypes = {\n  message: T.string.isRequired,\n};\n\nexport default Notification;","import React, { Component } from 'react';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css'\nimport Loader from 'react-loader-spinner'\nimport apiService from '../services/apiService';\nimport SearchBar from './SearchBar/SearchBar';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Button from './Button/Button';\nimport Modal from './Modal/Modal';\nimport Notification from './Notification/Notification';\n\nclass App extends Component {\n  state = {\n    pictures: [],\n    bigPicture: '',\n    query: '',\n    page: 1,\n    isEmpty: false,\n    isLoading: false,\n    isModal: false,\n    error: null,\n  };\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevState.query !== this.state.query || prevState.page !== this.state.page) {\n      this.setState({\n        isLoading: true,\n        isEmpty: false,\n        error: null,\n      });\n\n      apiService\n        .fetchPicturesWithQuery(this.state.query, this.state.page)\n        .then(picture => {\n          this.setState(state => ({\n            pictures: state.pictures.concat(picture)\n          }));\n          !picture.length && this.updateState(`isEmpty`, true);\n          picture.length && this.scrollToTarget(picture[0].id);\n        })\n        .catch(error => this.setState({ error }))\n        .finally(() => this.setState({ isLoading: false }));\n    }\n  };\n\n  updateState = ( state, value ) => {\n    this.setState({\n      [state]: value\n    })\n  };\n\n  updateQuery = ( value ) => {\n    value !== this.state.query && this.resetBeforeNewQuery();\n    this.updateState('query', value);\n  };\n\n  loadMorePictures = ( value ) => {\n    value++;\n    this.updateState('page', value);\n  };\n\n  resetBeforeNewQuery = () => {\n    this.updateState('page', 1);\n    this.updateState('pictures', []);\n  };\n\n  scrollToTarget = ( id ) => {\n    const target = document.getElementById(id).getBoundingClientRect().top + window.scrollY - 80;\n\n    window.scrollTo({\n      top: target,\n      behavior: 'smooth',\n    });\n  };\n\n  getBigPicture = ( e ) => {\n    this.updateState('bigPicture', e.target.dataset.src);\n    this.openModal();\n  };\n\n  openModal = () => {\n    this.updateState('isModal', true);\n  };\n\n  closeModal = () => {\n    this.updateState('isModal', false);\n    this.updateState('bigPicture', '');\n  };\n\n  render() {\n    const { pictures, bigPicture, page, error, isModal, isLoading, isEmpty } = this.state;\n    return (\n      <div className=\"page-container\">\n        <SearchBar updateQuery={ this.updateQuery }/>\n        {error && (\n          <Notification message={ `Что то пошло не так: ${error.message}` }/>\n        )}\n        {isEmpty && (\n          <Notification message={ `По вашему запросу ничего нет :(` }/>\n        )}\n        {pictures.length > 0 && (\n          <ImageGallery pictures={ pictures } getBigPicture={ this.getBigPicture }/>\n        )}\n        {isLoading && (\n          <Loader className=\"loader\" type=\"ThreeDots\" color=\"#e4e4e4\" height={80} width={80} />\n        )}\n        {pictures.length >= 12 && (\n          <Button title={ 'Больше' } page={page} handler={ this.loadMorePictures }/>\n        )}\n        {isModal && (\n          <Modal bigPicture={ bigPicture } closeModal={ this.closeModal }/>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import './sass/index.sass';\nimport App from './components/App';\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}